apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: front-end
    #namespace: sock-shop
spec:
  # deployment reference
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: front-end
  # the maximum time in seconds for the canary deployment
  # to make progress before it is rollback (default 600s)
  progressDeadlineSeconds: 60
  # HPA reference (optional)
  autoscalerRef:
    apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    name: front-end
    primaryScalerReplicas:
      minReplicas: 1
      maxReplicas: 4
  service:
    # service port number
    port: 80
    # container port number or name (optional)
    targetPort: 8079
    # Gateway API HTTPRoute host names
    #hosts:
    # - localproject.contour.io
    # Reference to the Gateway that the generated HTTPRoute would attach to.
    gatewayRefs:
      - name: sock-shop
        namespace: default
        sectionName: sock-shop
  analysis:
    # schedule interval (default 60s)
    interval: 1m
    # max number of failed metric checks before rollback
    threshold: 5
    mirrorWeight: 20
    # max traffic percentage routed to canary
    # percentage (0-100)
    maxWeight: 80
    # canary increment step
    # percentage (0-100)
    stepWeight: 10
    metrics:
      #- name: error-rate
      # max error rate (5xx responses)
      # percentage (0-100)
      #templateRef:
      #  name: error-rate
      #  namespace: flagger-system
      #thresholdRange:
      #  max: 1
      #interval: 1m
    - name: latency
      templateRef:
        name: latency
        namespace: flagger-system
      # seconds
      thresholdRange:
         max: 0.5
      interval: 30s
    # testing (optional)
    #webhooks:
    #  - name: smoke-test
    #    type: pre-rollout
    #    url: http://flagger-loadtester.test/
    #    timeout: 15s
    #    metadata:
    #      type: bash
    #      cmd: "curl -sd 'anon' http://podinfo-canary.test:9898/token | grep token"
    #  - name: load-test
    #    url: http://flagger-loadtester.test/
    #    timeout: 5s
    #    metadata:
    #      cmd: "hey -z 2m -q 10 -c 2 -host localproject.contour.io http://envoy.projectcontour/"
